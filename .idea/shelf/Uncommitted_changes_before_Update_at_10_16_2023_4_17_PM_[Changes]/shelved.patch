Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"59ff47a6-ece6-4e2e-b777-6247aa1f282e\" name=\"Changes\" comment=\"\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/org/launchcode/techjobs/oo/Main.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/org/launchcode/techjobs/oo/Main.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/test/java/org/launchcode/techjobs/oo/JobTest.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/test/java/org/launchcode/techjobs/oo/JobTest.java\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"ExternalProjectsData\">\r\n    <projectState path=\"$PROJECT_DIR$\">\r\n      <ProjectState />\r\n    </projectState>\r\n  </component>\r\n  <component name=\"ExternalProjectsManager\">\r\n    <system id=\"GRADLE\">\r\n      <state>\r\n        <task path=\"$PROJECT_DIR$\">\r\n          <activation />\r\n        </task>\r\n        <projects_view />\r\n      </state>\r\n    </system>\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Class\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"MarkdownSettingsMigration\">\r\n    <option name=\"stateVersion\" value=\"1\" />\r\n  </component>\r\n  <component name=\"ProblemsViewState\">\r\n    <option name=\"selectedTabId\" value=\"CurrentFile\" />\r\n  </component>\r\n  <component name=\"ProjectColorInfo\"><![CDATA[{\r\n  \"customColor\": \"\",\r\n  \"associatedIndex\": -1\r\n}]]></component>\r\n  <component name=\"ProjectId\" id=\"2Qn6e2NCqVj233XTVZ3RW2TzDBN\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\"><![CDATA[{\r\n  \"keyToString\": {\r\n    \"RunOnceActivity.OpenProjectViewOnStart\": \"true\",\r\n    \"RunOnceActivity.ShowReadmeOnStart\": \"true\",\r\n    \"SHARE_PROJECT_CONFIGURATION_FILES\": \"true\",\r\n    \"git-widget-placeholder\": \"main\"\r\n  }\r\n}]]></component>\r\n  <component name=\"RunManager\" selected=\"Gradle.TestTaskFive\">\r\n    <configuration name=\"Main\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"org.launchcode.techjobs.oo.Main\" />\r\n      <module name=\"techjobs-oo-java17-graded.main\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"org.launchcode.techjobs.oo.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"JobTest.testToStringStartsAndEndsWithNewLine\" type=\"GradleRunConfiguration\" factoryName=\"Gradle\" temporary=\"true\">\r\n      <ExternalSystemSettings>\r\n        <option name=\"executionName\" />\r\n        <option name=\"externalProjectPath\" value=\"$PROJECT_DIR$\" />\r\n        <option name=\"externalSystemIdString\" value=\"GRADLE\" />\r\n        <option name=\"scriptParameters\" value=\"\" />\r\n        <option name=\"taskDescriptions\">\r\n          <list />\r\n        </option>\r\n        <option name=\"taskNames\">\r\n          <list>\r\n            <option value=\":test\" />\r\n            <option value=\"--tests\" />\r\n            <option value=\"&quot;org.launchcode.techjobs.oo.JobTest.testToStringStartsAndEndsWithNewLine&quot;\" />\r\n          </list>\r\n        </option>\r\n        <option name=\"vmOptions\" />\r\n      </ExternalSystemSettings>\r\n      <ExternalSystemDebugServerProcess>false</ExternalSystemDebugServerProcess>\r\n      <ExternalSystemReattachDebugProcess>true</ExternalSystemReattachDebugProcess>\r\n      <DebugAllEnabled>false</DebugAllEnabled>\r\n      <RunAsTest>true</RunAsTest>\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <configuration name=\"TestTaskFive\" type=\"GradleRunConfiguration\" factoryName=\"Gradle\" temporary=\"true\">\r\n      <ExternalSystemSettings>\r\n        <option name=\"executionName\" />\r\n        <option name=\"externalProjectPath\" value=\"$PROJECT_DIR$\" />\r\n        <option name=\"externalSystemIdString\" value=\"GRADLE\" />\r\n        <option name=\"scriptParameters\" value=\"\" />\r\n        <option name=\"taskDescriptions\">\r\n          <list />\r\n        </option>\r\n        <option name=\"taskNames\">\r\n          <list>\r\n            <option value=\":test\" />\r\n            <option value=\"--tests\" />\r\n            <option value=\"&quot;org.launchcode.techjobs.oo.TestTaskFive&quot;\" />\r\n          </list>\r\n        </option>\r\n        <option name=\"vmOptions\" />\r\n      </ExternalSystemSettings>\r\n      <ExternalSystemDebugServerProcess>false</ExternalSystemDebugServerProcess>\r\n      <ExternalSystemReattachDebugProcess>true</ExternalSystemReattachDebugProcess>\r\n      <DebugAllEnabled>false</DebugAllEnabled>\r\n      <RunAsTest>true</RunAsTest>\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <configuration name=\"TestTaskFive.testToStringStartsAndEndsWithNewLine\" type=\"GradleRunConfiguration\" factoryName=\"Gradle\" temporary=\"true\">\r\n      <ExternalSystemSettings>\r\n        <option name=\"executionName\" />\r\n        <option name=\"externalProjectPath\" value=\"$PROJECT_DIR$\" />\r\n        <option name=\"externalSystemIdString\" value=\"GRADLE\" />\r\n        <option name=\"scriptParameters\" value=\"\" />\r\n        <option name=\"taskDescriptions\">\r\n          <list />\r\n        </option>\r\n        <option name=\"taskNames\">\r\n          <list>\r\n            <option value=\":test\" />\r\n            <option value=\"--tests\" />\r\n            <option value=\"&quot;org.launchcode.techjobs.oo.TestTaskFive.testToStringStartsAndEndsWithNewLine&quot;\" />\r\n          </list>\r\n        </option>\r\n        <option name=\"vmOptions\" />\r\n      </ExternalSystemSettings>\r\n      <ExternalSystemDebugServerProcess>false</ExternalSystemDebugServerProcess>\r\n      <ExternalSystemReattachDebugProcess>true</ExternalSystemReattachDebugProcess>\r\n      <DebugAllEnabled>false</DebugAllEnabled>\r\n      <RunAsTest>true</RunAsTest>\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <configuration name=\"Tests in 'techjobs-oo-java17-graded.test'\" type=\"GradleRunConfiguration\" factoryName=\"Gradle\" temporary=\"true\">\r\n      <ExternalSystemSettings>\r\n        <option name=\"executionName\" />\r\n        <option name=\"externalProjectPath\" value=\"$PROJECT_DIR$\" />\r\n        <option name=\"externalSystemIdString\" value=\"GRADLE\" />\r\n        <option name=\"scriptParameters\" value=\"\" />\r\n        <option name=\"taskDescriptions\">\r\n          <list />\r\n        </option>\r\n        <option name=\"taskNames\">\r\n          <list>\r\n            <option value=\":test\" />\r\n          </list>\r\n        </option>\r\n        <option name=\"vmOptions\" />\r\n      </ExternalSystemSettings>\r\n      <ExternalSystemDebugServerProcess>false</ExternalSystemDebugServerProcess>\r\n      <ExternalSystemReattachDebugProcess>true</ExternalSystemReattachDebugProcess>\r\n      <DebugAllEnabled>false</DebugAllEnabled>\r\n      <RunAsTest>true</RunAsTest>\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <configuration name=\"JobTest\" type=\"JUnit\" factoryName=\"JUnit\">\r\n      <module name=\"techjobs-oo-java17-graded.test\" />\r\n      <option name=\"ALTERNATIVE_JRE_PATH_ENABLED\" value=\"true\" />\r\n      <option name=\"ALTERNATIVE_JRE_PATH\" value=\"17\" />\r\n      <option name=\"PACKAGE_NAME\" value=\"org.launchcode.techjobs.oo\" />\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"org.launchcode.techjobs.oo.JobTest\" />\r\n      <option name=\"METHOD_NAME\" value=\"\" />\r\n      <option name=\"TEST_OBJECT\" value=\"class\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <list>\r\n      <item itemvalue=\"Application.Main\" />\r\n      <item itemvalue=\"Gradle.JobTest.testToStringStartsAndEndsWithNewLine\" />\r\n      <item itemvalue=\"Gradle.TestTaskFive\" />\r\n      <item itemvalue=\"Gradle.TestTaskFive.testToStringStartsAndEndsWithNewLine\" />\r\n      <item itemvalue=\"Gradle.Tests in 'techjobs-oo-java17-graded.test'\" />\r\n      <item itemvalue=\"JUnit.JobTest\" />\r\n    </list>\r\n    <recent_temporary>\r\n      <list>\r\n        <item itemvalue=\"Gradle.TestTaskFive\" />\r\n        <item itemvalue=\"Gradle.JobTest.testToStringStartsAndEndsWithNewLine\" />\r\n        <item itemvalue=\"Gradle.TestTaskFive.testToStringStartsAndEndsWithNewLine\" />\r\n        <item itemvalue=\"Application.Main\" />\r\n        <item itemvalue=\"Gradle.Tests in 'techjobs-oo-java17-graded.test'\" />\r\n      </list>\r\n    </recent_temporary>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"59ff47a6-ece6-4e2e-b777-6247aa1f282e\" name=\"Changes\" comment=\"\" />\r\n      <created>1685977091317</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1685977091317</updated>\r\n    </task>\r\n    <servers />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	
+++ b/.idea/workspace.xml	
@@ -5,8 +5,13 @@
   </component>
   <component name="ChangeListManager">
     <list default="true" id="59ff47a6-ece6-4e2e-b777-6247aa1f282e" name="Changes" comment="">
+      <change afterPath="$PROJECT_DIR$/src/main/java/org/launchcode/techjobs/oo/JobField.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/org/launchcode/techjobs/oo/Main.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/launchcode/techjobs/oo/Main.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/org/launchcode/techjobs/oo/CoreCompetency.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/launchcode/techjobs/oo/CoreCompetency.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/org/launchcode/techjobs/oo/Employer.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/launchcode/techjobs/oo/Employer.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/org/launchcode/techjobs/oo/Job.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/launchcode/techjobs/oo/Job.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/org/launchcode/techjobs/oo/Location.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/launchcode/techjobs/oo/Location.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/org/launchcode/techjobs/oo/PositionType.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/launchcode/techjobs/oo/PositionType.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/test/java/org/launchcode/techjobs/oo/JobTest.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/test/java/org/launchcode/techjobs/oo/JobTest.java" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
@@ -25,7 +30,12 @@
         <task path="$PROJECT_DIR$">
           <activation />
         </task>
-        <projects_view />
+        <projects_view>
+          <tree_state>
+            <expand />
+            <select />
+          </tree_state>
+        </projects_view>
       </state>
     </system>
   </component>
@@ -45,10 +55,9 @@
   <component name="ProblemsViewState">
     <option name="selectedTabId" value="CurrentFile" />
   </component>
-  <component name="ProjectColorInfo"><![CDATA[{
-  "customColor": "",
-  "associatedIndex": -1
-}]]></component>
+  <component name="ProjectColorInfo">{
+  &quot;associatedIndex&quot;: 2
+}</component>
   <component name="ProjectId" id="2Qn6e2NCqVj233XTVZ3RW2TzDBN" />
   <component name="ProjectLevelVcsManager" settingsEditedManually="true" />
   <component name="ProjectViewState">
@@ -60,24 +69,12 @@
     "RunOnceActivity.OpenProjectViewOnStart": "true",
     "RunOnceActivity.ShowReadmeOnStart": "true",
     "SHARE_PROJECT_CONFIGURATION_FILES": "true",
-    "git-widget-placeholder": "main"
+    "git-widget-placeholder": "main",
+    "last_opened_file_path": "Z:/Assignment2"
   }
 }]]></component>
-  <component name="RunManager" selected="Gradle.TestTaskFive">
-    <configuration name="Main" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
-      <option name="MAIN_CLASS_NAME" value="org.launchcode.techjobs.oo.Main" />
-      <module name="techjobs-oo-java17-graded.main" />
-      <extension name="coverage">
-        <pattern>
-          <option name="PATTERN" value="org.launchcode.techjobs.oo.*" />
-          <option name="ENABLED" value="true" />
-        </pattern>
-      </extension>
-      <method v="2">
-        <option name="Make" enabled="true" />
-      </method>
-    </configuration>
-    <configuration name="JobTest.testToStringStartsAndEndsWithNewLine" type="GradleRunConfiguration" factoryName="Gradle" temporary="true">
+  <component name="RunManager" selected="Gradle.Tests in 'techjobs-oo-java17-graded.test'">
+    <configuration name="JobTest" type="GradleRunConfiguration" factoryName="Gradle" temporary="true">
       <ExternalSystemSettings>
         <option name="executionName" />
         <option name="externalProjectPath" value="$PROJECT_DIR$" />
@@ -90,7 +87,7 @@
           <list>
             <option value=":test" />
             <option value="--tests" />
-            <option value="&quot;org.launchcode.techjobs.oo.JobTest.testToStringStartsAndEndsWithNewLine&quot;" />
+            <option value="&quot;org.launchcode.techjobs.oo.JobTest&quot;" />
           </list>
         </option>
         <option name="vmOptions" />
@@ -149,6 +146,30 @@
       <RunAsTest>true</RunAsTest>
       <method v="2" />
     </configuration>
+    <configuration name="TestTaskSix" type="GradleRunConfiguration" factoryName="Gradle" temporary="true">
+      <ExternalSystemSettings>
+        <option name="executionName" />
+        <option name="externalProjectPath" value="$PROJECT_DIR$" />
+        <option name="externalSystemIdString" value="GRADLE" />
+        <option name="scriptParameters" value="" />
+        <option name="taskDescriptions">
+          <list />
+        </option>
+        <option name="taskNames">
+          <list>
+            <option value=":test" />
+            <option value="--tests" />
+            <option value="&quot;org.launchcode.techjobs.oo.TestTaskSix&quot;" />
+          </list>
+        </option>
+        <option name="vmOptions" />
+      </ExternalSystemSettings>
+      <ExternalSystemDebugServerProcess>false</ExternalSystemDebugServerProcess>
+      <ExternalSystemReattachDebugProcess>true</ExternalSystemReattachDebugProcess>
+      <DebugAllEnabled>false</DebugAllEnabled>
+      <RunAsTest>true</RunAsTest>
+      <method v="2" />
+    </configuration>
     <configuration name="Tests in 'techjobs-oo-java17-graded.test'" type="GradleRunConfiguration" factoryName="Gradle" temporary="true">
       <ExternalSystemSettings>
         <option name="executionName" />
@@ -184,20 +205,20 @@
       </method>
     </configuration>
     <list>
-      <item itemvalue="Application.Main" />
-      <item itemvalue="Gradle.JobTest.testToStringStartsAndEndsWithNewLine" />
       <item itemvalue="Gradle.TestTaskFive" />
       <item itemvalue="Gradle.TestTaskFive.testToStringStartsAndEndsWithNewLine" />
+      <item itemvalue="Gradle.TestTaskSix" />
       <item itemvalue="Gradle.Tests in 'techjobs-oo-java17-graded.test'" />
+      <item itemvalue="Gradle.JobTest" />
       <item itemvalue="JUnit.JobTest" />
     </list>
     <recent_temporary>
       <list>
+        <item itemvalue="Gradle.Tests in 'techjobs-oo-java17-graded.test'" />
+        <item itemvalue="Gradle.TestTaskSix" />
+        <item itemvalue="Gradle.JobTest" />
         <item itemvalue="Gradle.TestTaskFive" />
-        <item itemvalue="Gradle.JobTest.testToStringStartsAndEndsWithNewLine" />
         <item itemvalue="Gradle.TestTaskFive.testToStringStartsAndEndsWithNewLine" />
-        <item itemvalue="Application.Main" />
-        <item itemvalue="Gradle.Tests in 'techjobs-oo-java17-graded.test'" />
       </list>
     </recent_temporary>
   </component>
Index: src/main/java/org/launchcode/techjobs/oo/Job.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package org.launchcode.techjobs.oo;\r\n\r\nimport java.util.Objects;\r\n\r\nimport static java.lang.System.lineSeparator;\r\n\r\npublic class Job {\r\n\r\n    private int id;\r\n    private static int nextId = 1;\r\n\r\n    private String name;\r\n    private Employer employer;\r\n    private Location location;\r\n    private PositionType positionType;\r\n    private CoreCompetency coreCompetency;\r\n\r\n    // TODO: Add two constructors - one to initialize a unique ID and a second to initialize the\r\n    //  other five fields. The second constructor should also call the first in order to initialize\r\n    //  the 'id' field.\r\n    public Job() {\r\n        id = nextId;\r\n        nextId++;\r\n    }\r\n\r\n    public Job(String name, Employer employer, Location location, PositionType positionType, CoreCompetency coreCompetency) {\r\n        this();\r\n        this.name = name;\r\n        this.employer = employer;\r\n        this.location = location;\r\n        this.positionType = positionType;\r\n        this.coreCompetency = coreCompetency;\r\n    }\r\n\r\n    // TODO: Add custom equals and hashCode methods. Consider two Job objects \"equal\" when their id fields\r\n    //  match.\r\n\r\n    @Override\r\n    public boolean equals(Object o) {\r\n        if (this == o) return true;\r\n        if (o == null || getClass() != o.getClass()) return false;\r\n        Job job = (Job) o;\r\n        return id == job.id;\r\n    }\r\n\r\n    @Override\r\n    public int hashCode() {\r\n        return Objects.hash(id);\r\n    }\r\n\r\n\r\n    // TODO: Add getters for each field EXCEPT nextId. Add setters for each field EXCEPT nextID\r\n    //  and id.\r\n\r\n    public int getId() {\r\n        return id;\r\n    }\r\n\r\n    public String getName() {\r\n        if (name == null || name.isEmpty()) {\r\n            return \"Data not available\";\r\n        }\r\n        return name;\r\n    }\r\n\r\n    public void setName(String name) {\r\n        this.name = name;\r\n    }\r\n\r\n    public Employer getEmployer() {\r\n        return employer;\r\n    }\r\n\r\n    public void setEmployer(Employer employer) {\r\n        this.employer = employer;\r\n    }\r\n\r\n    public Location getLocation() {\r\n        return location;\r\n    }\r\n\r\n    public void setLocation(Location location) {\r\n        this.location = location;\r\n    }\r\n\r\n    public PositionType getPositionType() {\r\n        return positionType;\r\n    }\r\n\r\n    public void setPositionType(PositionType positionType) {\r\n        this.positionType = positionType;\r\n    }\r\n\r\n    public CoreCompetency getCoreCompetency() {\r\n        return coreCompetency;\r\n    }\r\n\r\n    public void setCoreCompetency(CoreCompetency coreCompetency) {\r\n        this.coreCompetency = coreCompetency;\r\n    }\r\n\r\n    @Override\r\n    public String toString() {\r\n        return  System.lineSeparator() +\r\n                \"ID: \" + id + System.lineSeparator() +\r\n                \"Name: \" + name + System.lineSeparator() +\r\n                \"Employer: \" + employer.getValue() + System.lineSeparator() +\r\n                \"Location: \" + location.getValue() + System.lineSeparator() +\r\n                \"Position Type: \" + positionType.getValue() + System.lineSeparator() +\r\n                \"Core Competency: \" + coreCompetency.getValue() + System.lineSeparator();\r\n    }\r\n\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/org/launchcode/techjobs/oo/Job.java b/src/main/java/org/launchcode/techjobs/oo/Job.java
--- a/src/main/java/org/launchcode/techjobs/oo/Job.java	
+++ b/src/main/java/org/launchcode/techjobs/oo/Job.java	
@@ -4,7 +4,7 @@
 
 import static java.lang.System.lineSeparator;
 
-public class Job {
+public class Job extends JobField {
 
     private int id;
     private static int nextId = 1;
@@ -101,14 +101,22 @@
 
     @Override
     public String toString() {
-        return  System.lineSeparator() +
-                "ID: " + id + System.lineSeparator() +
-                "Name: " + name + System.lineSeparator() +
-                "Employer: " + employer.getValue() + System.lineSeparator() +
-                "Location: " + location.getValue() + System.lineSeparator() +
-                "Position Type: " + positionType.getValue() + System.lineSeparator() +
-                "Core Competency: " + coreCompetency.getValue() + System.lineSeparator();
+        return "\n" +
+                "ID: " + id +
+                "\nName: " + name +
+                "\nEmployer: " + employer.getValue() + //getValue()
+                "\nLocation: " + location.getValue() +
+                "\nPosition Type: " + positionType.getValue() +
+                "\nCore Competency: " + coreCompetency.getValue() +
+                "\n";
     }
 
 
 }
+//System.lineSeparator() +
+//        "ID: " + id + System.lineSeparator() +
+//        "Name: " + name + System.lineSeparator() +
+//        "Employer: " + employer.getValue() + System.lineSeparator() +
+//        "Location: " + location.getValue() + System.lineSeparator() +
+//        "Position Type: " + positionType.getValue() + System.lineSeparator() +
+//        "Core Competency: " + coreCompetency.getValue() + System.lineSeparator();
\ No newline at end of file
Index: src/main/java/org/launchcode/techjobs/oo/JobField.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/org/launchcode/techjobs/oo/JobField.java b/src/main/java/org/launchcode/techjobs/oo/JobField.java
new file mode 100644
--- /dev/null	
+++ b/src/main/java/org/launchcode/techjobs/oo/JobField.java	
@@ -0,0 +1,47 @@
+package org.launchcode.techjobs.oo;
+
+import java.util.Objects;
+
+public abstract class JobField {
+
+    public int id;
+    public static int nextId = 1;
+    public String value;
+
+    public JobField() {
+        id = nextId;
+        nextId++;
+    }
+
+    public JobField(String value) {
+        this();
+        this.value = value;
+    }
+
+    @Override
+    public String toString() {
+        return value;
+    }
+
+    @Override
+    public int hashCode() {
+        return Objects.hash(getId());
+    }
+
+    public int getId() {
+        return id;
+    }
+
+    public String getValue() {
+        if (value == null || value.isEmpty()) {
+            return "Data not available";
+        } else {
+            return value;
+        }
+    }
+
+    public void setValue(String value) {
+        this.value = value;
+    }
+
+}
\ No newline at end of file
Index: src/test/java/org/launchcode/techjobs/oo/JobTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package org.launchcode.techjobs.oo;\r\n\r\nimport org.junit.Assert;\r\nimport org.junit.Test;\r\n\r\nimport static org.junit.Assert.*;\r\n\r\npublic class JobTest {\r\n    //TODO: Create your unit tests here\r\n\r\n    @Test\r\n    public void testSettingJobId() {\r\n        Job jobTest1 = new Job();\r\n        Job jobTest2 = new Job();\r\n        assertEquals (jobTest1.getId(), jobTest2.getId(), 1);\r\n        assertNotEquals(jobTest1.getId(), jobTest2.getId());\r\n    }\r\n\r\n    @Test\r\n    public void testJobConstructorSetsAllFields() {\r\n        Job jobTest3 = new Job(\"Product tester\", new Employer(\"ACME\"), new Location(\"Desert\"), new PositionType(\"Quality control\"), new CoreCompetency(\"Persistence\"));\r\n\r\n        assertTrue(jobTest3.getName() != null);\r\n        assertTrue(jobTest3.getEmployer() != null);\r\n        assertTrue(jobTest3.getLocation() != null);\r\n        assertTrue(jobTest3.getPositionType() != null);\r\n        assertTrue(jobTest3.getCoreCompetency() != null);\r\n\r\n        assertEquals(\"Product tester\", jobTest3.getName());\r\n        assertEquals(\"ACME\", jobTest3.getEmployer().getValue());\r\n        assertEquals(\"Desert\", jobTest3.getLocation().getValue());\r\n        assertEquals(\"Quality control\", jobTest3.getPositionType().getValue());\r\n        assertEquals(\"Persistence\", jobTest3.getCoreCompetency().getValue());\r\n\r\n    }\r\n\r\n    @Test\r\n    public void testJobsForEquality() {\r\n        Job jobTest4 = new Job(\"Product tester\", new Employer(\"ACME\"), new Location(\"Desert\"), new PositionType(\"Quality control\"), new CoreCompetency(\"Persistence\"));\r\n        Job jobTest5 = new Job(\"Product tester\", new Employer(\"ACME\"), new Location(\"Desert\"), new PositionType(\"Quality control\"), new CoreCompetency(\"Persistence\"));\r\n        assertFalse(jobTest4.equals(jobTest5));\r\n\r\n    }\r\n\r\n    @Test\r\n    public void testToStringStartsAndEndsWithNewLine() {\r\n        Job jobTest6 = new Job(\"Product tester\", new Employer(\"ACME\"), new Location(\"Desert\"), new PositionType(\"Quality control\"), new CoreCompetency(\"Persistence\"));\r\n        String expectedStart = jobTest6.toString().substring(0,System.lineSeparator().length());\r\n        String expectedEnd = jobTest6.toString().substring(jobTest6.toString().length() - System.lineSeparator().length(), jobTest6.toString().length());\r\n\r\n        String dataInfo = \"ID: \" + jobTest6.getId() + \"\\r\\nName: Product tester\\r\\nEmployer: ACME\\r\\nLocation: Desert\" +\r\n                \"\\r\\nPosition Type: Quality control\\r\\nCore Competency: Persistence\";\r\n\r\n        Assert.assertEquals(System.lineSeparator() + dataInfo + System.lineSeparator(), jobTest6.toString());\r\n        assertEquals(System.lineSeparator(), expectedStart);\r\n        assertEquals(System.lineSeparator(), expectedEnd);\r\n    }\r\n\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/test/java/org/launchcode/techjobs/oo/JobTest.java b/src/test/java/org/launchcode/techjobs/oo/JobTest.java
--- a/src/test/java/org/launchcode/techjobs/oo/JobTest.java	
+++ b/src/test/java/org/launchcode/techjobs/oo/JobTest.java	
@@ -12,7 +12,7 @@
     public void testSettingJobId() {
         Job jobTest1 = new Job();
         Job jobTest2 = new Job();
-        assertEquals (jobTest1.getId(), jobTest2.getId(), 1);
+        assertEquals(jobTest1.getId(), jobTest2.getId(), 1);
         assertNotEquals(jobTest1.getId(), jobTest2.getId());
     }
 
@@ -43,18 +43,31 @@
     }
 
     @Test
+//    public void testToStringStartsAndEndsWithNewLine() {
+//        Job jobTest6 = new Job("Product tester", new Employer("ACME"), new Location("Desert"), new PositionType("Quality control"), new CoreCompetency("Persistence"));
+//        String expectedStart = jobTest6.toString().substring(0,System.lineSeparator().length());
+//        String expectedEnd = jobTest6.toString().substring(jobTest6.toString().length() - System.lineSeparator().length(), jobTest6.toString().length());
+//
+//        assertEquals(System.lineSeparator(), expectedStart);
+//        assertEquals(System.lineSeparator(), expectedEnd);
+//    }
     public void testToStringStartsAndEndsWithNewLine() {
-        Job jobTest6 = new Job("Product tester", new Employer("ACME"), new Location("Desert"), new PositionType("Quality control"), new CoreCompetency("Persistence"));
-        String expectedStart = jobTest6.toString().substring(0,System.lineSeparator().length());
-        String expectedEnd = jobTest6.toString().substring(jobTest6.toString().length() - System.lineSeparator().length(), jobTest6.toString().length());
-
-        String dataInfo = "ID: " + jobTest6.getId() + "\r\nName: Product tester\r\nEmployer: ACME\r\nLocation: Desert" +
-                "\r\nPosition Type: Quality control\r\nCore Competency: Persistence";
+        Job testJob3 = new Job("Product tester", new Employer("ACME"), new Location("Desert"), new PositionType("Quality control"), new CoreCompetency("Persistence"));
+        assertEquals('\n', testJob3.toString().charAt(0));
+        assertEquals('\n', testJob3.toString().charAt(testJob3.toString().length() - 1));
+    }
 
-        Assert.assertEquals(System.lineSeparator() + dataInfo + System.lineSeparator(), jobTest6.toString());
-        assertEquals(System.lineSeparator(), expectedStart);
-        assertEquals(System.lineSeparator(), expectedEnd);
+    @Test
+    public void testToStringContainsCorrectLabelsAndData() {
+        Job testJob4 = new Job("Product tester", new Employer("ACME"), new Location("Desert"), new PositionType("Quality control"), new CoreCompetency("Persistence"));
+        assertEquals("\nID: " + testJob4.getId() + "\nName: Product tester\nEmployer: ACME\nLocation: Desert\nPosition Type: Quality control\nCore Competency: Persistence\n" , testJob4.toString());
     }
+
+    @Test
+    public void testToStringHandlesEmptyField() {
+        Job testJob5 = new Job("Product tester", new Employer(""), new Location("Desert"), new PositionType("Quality control"), new CoreCompetency(""));
+        assertEquals("\nID: " + testJob5.getId() + "\nName: Product tester\nEmployer: Data not available\nLocation: Desert\nPosition Type: Quality control\nCore Competency: Data not available\n" , testJob5.toString());
 
 
+    }
 }
